package com.letsball.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TDictionaryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public TDictionaryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDIdIsNull() {
            addCriterion("D_ID is null");
            return (Criteria) this;
        }

        public Criteria andDIdIsNotNull() {
            addCriterion("D_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDIdEqualTo(Integer value) {
            addCriterion("D_ID =", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotEqualTo(Integer value) {
            addCriterion("D_ID <>", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThan(Integer value) {
            addCriterion("D_ID >", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("D_ID >=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThan(Integer value) {
            addCriterion("D_ID <", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThanOrEqualTo(Integer value) {
            addCriterion("D_ID <=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdIn(List<Integer> values) {
            addCriterion("D_ID in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotIn(List<Integer> values) {
            addCriterion("D_ID not in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdBetween(Integer value1, Integer value2) {
            addCriterion("D_ID between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotBetween(Integer value1, Integer value2) {
            addCriterion("D_ID not between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDNammeIsNull() {
            addCriterion("D_NAMME is null");
            return (Criteria) this;
        }

        public Criteria andDNammeIsNotNull() {
            addCriterion("D_NAMME is not null");
            return (Criteria) this;
        }

        public Criteria andDNammeEqualTo(String value) {
            addCriterion("D_NAMME =", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeNotEqualTo(String value) {
            addCriterion("D_NAMME <>", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeGreaterThan(String value) {
            addCriterion("D_NAMME >", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeGreaterThanOrEqualTo(String value) {
            addCriterion("D_NAMME >=", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeLessThan(String value) {
            addCriterion("D_NAMME <", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeLessThanOrEqualTo(String value) {
            addCriterion("D_NAMME <=", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeLike(String value) {
            addCriterion("D_NAMME like", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeNotLike(String value) {
            addCriterion("D_NAMME not like", value, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeIn(List<String> values) {
            addCriterion("D_NAMME in", values, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeNotIn(List<String> values) {
            addCriterion("D_NAMME not in", values, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeBetween(String value1, String value2) {
            addCriterion("D_NAMME between", value1, value2, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDNammeNotBetween(String value1, String value2) {
            addCriterion("D_NAMME not between", value1, value2, "dNamme");
            return (Criteria) this;
        }

        public Criteria andDTypeIsNull() {
            addCriterion("D_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andDTypeIsNotNull() {
            addCriterion("D_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andDTypeEqualTo(Integer value) {
            addCriterion("D_TYPE =", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeNotEqualTo(Integer value) {
            addCriterion("D_TYPE <>", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeGreaterThan(Integer value) {
            addCriterion("D_TYPE >", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("D_TYPE >=", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeLessThan(Integer value) {
            addCriterion("D_TYPE <", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeLessThanOrEqualTo(Integer value) {
            addCriterion("D_TYPE <=", value, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeIn(List<Integer> values) {
            addCriterion("D_TYPE in", values, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeNotIn(List<Integer> values) {
            addCriterion("D_TYPE not in", values, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeBetween(Integer value1, Integer value2) {
            addCriterion("D_TYPE between", value1, value2, "dType");
            return (Criteria) this;
        }

        public Criteria andDTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("D_TYPE not between", value1, value2, "dType");
            return (Criteria) this;
        }

        public Criteria andInputNameIsNull() {
            addCriterion("INPUT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andInputNameIsNotNull() {
            addCriterion("INPUT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andInputNameEqualTo(String value) {
            addCriterion("INPUT_NAME =", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameNotEqualTo(String value) {
            addCriterion("INPUT_NAME <>", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameGreaterThan(String value) {
            addCriterion("INPUT_NAME >", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameGreaterThanOrEqualTo(String value) {
            addCriterion("INPUT_NAME >=", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameLessThan(String value) {
            addCriterion("INPUT_NAME <", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameLessThanOrEqualTo(String value) {
            addCriterion("INPUT_NAME <=", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameLike(String value) {
            addCriterion("INPUT_NAME like", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameNotLike(String value) {
            addCriterion("INPUT_NAME not like", value, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameIn(List<String> values) {
            addCriterion("INPUT_NAME in", values, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameNotIn(List<String> values) {
            addCriterion("INPUT_NAME not in", values, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameBetween(String value1, String value2) {
            addCriterion("INPUT_NAME between", value1, value2, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputNameNotBetween(String value1, String value2) {
            addCriterion("INPUT_NAME not between", value1, value2, "inputName");
            return (Criteria) this;
        }

        public Criteria andInputDateIsNull() {
            addCriterion("INPUT_DATE is null");
            return (Criteria) this;
        }

        public Criteria andInputDateIsNotNull() {
            addCriterion("INPUT_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andInputDateEqualTo(Date value) {
            addCriterionForJDBCDate("INPUT_DATE =", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("INPUT_DATE <>", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateGreaterThan(Date value) {
            addCriterionForJDBCDate("INPUT_DATE >", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INPUT_DATE >=", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateLessThan(Date value) {
            addCriterionForJDBCDate("INPUT_DATE <", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INPUT_DATE <=", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateIn(List<Date> values) {
            addCriterionForJDBCDate("INPUT_DATE in", values, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("INPUT_DATE not in", values, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INPUT_DATE between", value1, value2, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INPUT_DATE not between", value1, value2, "inputDate");
            return (Criteria) this;
        }

        public Criteria andUpdateNameIsNull() {
            addCriterion("UPDATE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateNameIsNotNull() {
            addCriterion("UPDATE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateNameEqualTo(String value) {
            addCriterion("UPDATE_NAME =", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameNotEqualTo(String value) {
            addCriterion("UPDATE_NAME <>", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameGreaterThan(String value) {
            addCriterion("UPDATE_NAME >", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_NAME >=", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameLessThan(String value) {
            addCriterion("UPDATE_NAME <", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_NAME <=", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameLike(String value) {
            addCriterion("UPDATE_NAME like", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameNotLike(String value) {
            addCriterion("UPDATE_NAME not like", value, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameIn(List<String> values) {
            addCriterion("UPDATE_NAME in", values, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameNotIn(List<String> values) {
            addCriterion("UPDATE_NAME not in", values, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameBetween(String value1, String value2) {
            addCriterion("UPDATE_NAME between", value1, value2, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateNameNotBetween(String value1, String value2) {
            addCriterion("UPDATE_NAME not between", value1, value2, "updateName");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DATE in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DATE not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DATE between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DATE not between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andDelsignIsNull() {
            addCriterion("DELSIGN is null");
            return (Criteria) this;
        }

        public Criteria andDelsignIsNotNull() {
            addCriterion("DELSIGN is not null");
            return (Criteria) this;
        }

        public Criteria andDelsignEqualTo(Integer value) {
            addCriterion("DELSIGN =", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignNotEqualTo(Integer value) {
            addCriterion("DELSIGN <>", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignGreaterThan(Integer value) {
            addCriterion("DELSIGN >", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignGreaterThanOrEqualTo(Integer value) {
            addCriterion("DELSIGN >=", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignLessThan(Integer value) {
            addCriterion("DELSIGN <", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignLessThanOrEqualTo(Integer value) {
            addCriterion("DELSIGN <=", value, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignIn(List<Integer> values) {
            addCriterion("DELSIGN in", values, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignNotIn(List<Integer> values) {
            addCriterion("DELSIGN not in", values, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignBetween(Integer value1, Integer value2) {
            addCriterion("DELSIGN between", value1, value2, "delsign");
            return (Criteria) this;
        }

        public Criteria andDelsignNotBetween(Integer value1, Integer value2) {
            addCriterion("DELSIGN not between", value1, value2, "delsign");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_dictionary
     *
     * @mbggenerated do_not_delete_during_merge Wed Oct 14 18:33:38 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_dictionary
     *
     * @mbggenerated Wed Oct 14 18:33:38 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}